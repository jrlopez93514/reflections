What happens when you initialize a repository? Why do you need to do it?

Initializing a repository is the first step to source control of your files. 
You need to do it because only you know when you're ready to start this process.

How is the staging area different from the working directory and the repository? 
What value do you think it offers?

It represents work that you believe is ready to commit but may not have all the files
you eventually want to commit. It allows you to submit files before your ready to commit.

How can you use the staging area to make sure you have one commit per logical change?

Only add files into it that are part of a single logical change.

What are some situations when branches would be helpful in keeping your history organized? 
How would branches help?

If I'm making a new version of an application or doing some experimental work. 
Branches keep the work separate so they don't affect each other.

How do the diagrams help you visualize the branch structure?

They show the relationship of the files on each branch and their common origin.

What is the result of merging two branches together? 
Why do we represent it in the diagram the way we do?

We end up with one branch with both sets of changes. Because the commits are
blended together based on their time line but are still distinct in terms of each branch. 

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?

Automatic merging save time and effort but introduces risk. Manually merging
requires knowledge of the changes but exposes what was done to scrutiny. 

